version: '3.8'

services:
  # 개발용 MongoDB
  mongodb:
    image: mongo:7.0
    container_name: mountain-mongodb-dev
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: mountain_dev
    ports:
      - "27017:27017"
    volumes:
      - mongodb_dev_data:/data/db
      - ./docker/mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - mountain-dev-network

  # 개발용 NestJS 애플리케이션 (핫 리로드)
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: mountain-app-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/mountain_dev?authSource=admin
      JWT_SECRET: your-dev-jwt-secret-key
    ports:
      - "3000:3000"
      - "9229:9229" # 디버깅 포트
    depends_on:
      - mongodb
    networks:
      - mountain-dev-network
    volumes:
      - .:/app
      - /app/node_modules
      - ./logs:/app/logs

  # MongoDB Express (개발용)
  mongo-express:
    image: mongo-express:1.0.0
    container_name: mountain-mongo-express-dev
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
    networks:
      - mountain-dev-network

volumes:
  mongodb_dev_data:
    driver: local

networks:
  mountain-dev-network:
    driver: bridge
