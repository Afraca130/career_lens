version: '3.8'

services:
  # MongoDB 서비스
  mongodb:
    image: mongo:7.0
    container_name: mountain-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: mountain
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - mountain-network

  # NestJS 애플리케이션 서비스
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: mountain-app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/mountain?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key-for-production
    ports:
      - "3000:3000"
    depends_on:
      - mongodb
    networks:
      - mountain-network
    volumes:
      - ./logs:/app/logs

  # MongoDB Express (옵션 - 개발용)
  mongo-express:
    image: mongo-express:1.0.0
    container_name: mountain-mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
    networks:
      - mountain-network
    profiles:
      - dev

# 볼륨 정의
volumes:
  mongodb_data:
    driver: local

# 네트워크 정의
networks:
  mountain-network:
    driver: bridge
